
`spatialite-rest` is the implementation of a very basic spatialite REST wsgi Gateway
in perl. It serves geometries from the spatialite as GeoJSON for displaying via a 
Leaflet jquery based frontend.

All Styles, Layers etc are contained within the Spatialite databases.

Spatialite schema
=================

The schema beeing served is undergoing some movements and is not fully defined.

Currently a Spatialite may contain multiple "layer" which must have the same
boundary or bounding box. Each layer may have different attributes e.g.
columns. Styles are defined globally. The spatialite contains a table per layer
which must have the same name as the layers name. A table called 'meta'
contains the list of layer, popups, styles and other config.  The meta table
will be completely send to the web client deserialized with Perl
`Hash::Flatten` and sent to the javascript frontend as JSON.

This is an example:

    contact.email|f@zz.de
    contact.name|Florian Lohoff
    style.default.color|#ff0000
    style.default.weight|4
    style.default.opacity|0.9
    style.ref.color|#000080
    style.ref.weight|3
    style.ref.opacity|0.9
    style.footway.color|#707000
    style.footway.weight|3
    style.footway.opacity|0.9
    style.redundant.color|#007070
    style.redundant.weight|3
    style.redundant.opacity|0.6
    layer.wayproblems.geometrycolumn|geometry
    layer.wayproblems.srid|4326
    layer.wayproblems.maxfeatures|1000
    layer.wayproblems.minzoom|12
    layer.wayproblems.stylecolumn|style
    layer.wayproblems.columns:0|id
    layer.wayproblems.columns:1|key
    layer.wayproblems.columns:2|value
    layer.wayproblems.columns:3|changeset
    layer.wayproblems.columns:4|user
    layer.wayproblems.columns:5|timestamp
    layer.wayproblems.columns:6|problem
    layer.wayproblems.columns:7|style
    layer.wayproblems.popup|<h4>Way problems:</h4> Way <a href="https://www.openstreetmap.org/way/{{ id }}">{{ id }}</a><br> Last modified {{ timestamp }}<br> in changeset {{ changeset }} by {{ user }}<br> <p style="font-size: 1.2em;">{{ problem }}</p> {{> remotecontrol wayselect=id }}
    time.data|2018-05-15T11:36:01Z
    time.process|2018-05-15T11:36:26Z
    center.lat|51.93326
    center.lon|8.80966
    center.zoom|9 
    boundary|{"coordinates":[[[8.094563,52.07366],[8.103081,52.07369],[8.185742,52.08434], ...


Old style databases hat only a single `geometrycolumn` and a single `stylecolumn`. Newer database
may contain multiple geometry columns per row. Then there should be a

    layer.layername.geometrycolumns:0|fooline
    layer.layername.geometrycolumns:1|barpoint

which is an array to name the geometry columns. In that case the `stylecolumn` will not be used
or parsed. It is assumed that the style column for the geometry column is the same name
suffixed with style e.g.

    fooline
    foolinestyle
    barpoint
    barpointstyle

Installation
============

    apt-get install libhash-flatten-perl libmojolicious-perl libapache2-mod-perl2

Apache config
-------------

You will need to enable mod_perl via `a2enmod mod_perl`

    PerlOptions +Parent
    
    <Perl>
    	$ENV{PLACK_ENV} = 'production';
    	$ENV{MOJO_HOME} = '/var/www/spatialite-rest';
    	$ENV{MOJO_MODE} = 'deployment';
    </Perl>
    
    <Location /spatialite-rest/>
    	SetHandler perl-script
    	PerlResponseHandler Plack::Handler::Apache2
    	PerlSetVar psgi_app /var/www/spatialite-rest/spatiaserv
    </Location>     

Databases
---------

Databases must end in `.sqlite` and should be in the `spatialite-rest/databases` folder.

Todo / Ideas
============

- Only send date/time in bbox request not full meta
  - If data/process time changes reinit/reload layer/meta
    so that if style etc has changed we will switch
- Possibility to send feature limit to backend
- Show if feature limit has been reached
- Load signalling somewhere 
- Display long description of layer processing (iframe popover with
  file from database?)
- Slide in on left with a list of layers
- Fix remote control link deleting position "#" anchor
- Add possibility of an RSS feed based on the current view
  -> Database column with feature bbox and RSS info
- Feature selection for edit link 
  -> multiple ways, relations, nodes
- Backend call to hide features (processed)
  -> Needs "empty" database column for hidden features
  -> Could we simply change the style and popup?
- Dont send full meta information in every request

Git Origin
==========

This is a git repository mirror from:

    git clone git://pax.zz.de/spatialite-rest
